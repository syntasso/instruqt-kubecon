#!/bin/bash
#
# This script runs when the platform solve the challenge.
#
# The platform determines if the script was successful using the exit code of this
# script. If the exit code is not 0, the script fails. 
#

try=0
max_retries=5
until [ $try -eq $max_retries ]; do
    kubectl apply --context kind-platform -f ${HOME}/hackathon/postgres/promise.yaml;
    exit_code=$?
    if [ $exit_code -eq 0 ]; then
        break
    else
        try=$((try + 1))
        echo "Apply failed, retrying kubectl apply... ($try/$max_retries)"
        sleep 2
    fi
done
kubectl wait --context kind-platform --for=create crd/postgresqls.marketplace.kratix.io
kubectl wait --context kind-worker --timeout 300s --for=create deploy/postgres-operator
kubectl wait --context kind-worker --timeout 300s --for=condition=Available deploy/postgres-operator

kubectl get --context kind-platform promises
kubectl get --context kind-platform crds

touch $HOME/kubecon/aas
